#! /opt/homebrew/bin/bash
# Define target architectures and their corresponding linkers
declare -A targets=(
    [x86_64-unknown-linux-musl]="x86_64-unknown-linux-gnu-gcc" #works
    # [arm-unknown-linux-gnueabihf]="arm-linux-gnueabihf-gcc"
    [x86_64-pc-windows-gnu]="x86_64-w64-mingw32-gcc" #works
    # [i686-pc-windows-msvc]="i686-w64-mingw32-gcc"
    [x86_64-apple-darwin]="clang" #works
    [aarch64-apple-darwin]="clang" #works
)

# Path to the Cargo config file
CARGO_CONFIG_PATH=".cargo/config.toml"

# Ensure the Cargo config directory exists
mkdir -p $(dirname "$CARGO_CONFIG_PATH")

# Start building the Cargo config
echo "# This file is auto-generated by cross_compile.sh" > "$CARGO_CONFIG_PATH"

# Append config for each target
for target in "${!targets[@]}"; do
    linker="${targets[$target]}"
    echo "[target.${target}]" >> "$CARGO_CONFIG_PATH"
    echo "linker = \"${linker}\"" >> "$CARGO_CONFIG_PATH"
done

# echo "Checking and installing necessary cross-compilers and tools..."
# Adjust the installation commands according to your system's package manager or requirements
# macOS specific installations
# brew install mingw-w64 cmake

# Build for each target
for target in "${!targets[@]}"; do
    echo "Building for target $target..."
    cargo build --release --target "$target" || echo "Failed to build for target $target"
done

echo "Cross-compilation completed."